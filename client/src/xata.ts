// Generated by Xata Codegen 0.26.3. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Users",
    columns: [
      { name: "email", type: "email", unique: true },
      { name: "password", type: "string" },
    ],
    revLinks: [{ column: "userID", table: "Applications" }],
  },
  {
    name: "Jobs",
    columns: [
      { name: "company", type: "string" },
      { name: "description", type: "text" },
      { name: "avatarImg", type: "file" },
    ],
    revLinks: [{ column: "jobID", table: "Applications" }],
  },
  {
    name: "Applications",
    columns: [
      { name: "userID", type: "link", link: { table: "Users" }, unique: true },
      { name: "jobID", type: "link", link: { table: "Jobs" } },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Users = InferredTypes["Users"];
export type UsersRecord = Users & XataRecord;

export type Jobs = InferredTypes["Jobs"];
export type JobsRecord = Jobs & XataRecord;

export type Applications = InferredTypes["Applications"];
export type ApplicationsRecord = Applications & XataRecord;

export type DatabaseSchema = {
  Users: UsersRecord;
  Jobs: JobsRecord;
  Applications: ApplicationsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Ralph-Codes-s-workspace-uglabh.us-east-1.xata.sh/db/Jobber",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
